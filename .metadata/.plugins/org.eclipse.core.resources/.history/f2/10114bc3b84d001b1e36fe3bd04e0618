#include "stdint.h"
#include"inc/tm4c123gh6pm.h"

void init_i2c();

void Writei2c(uint32_t adress,uint8_t data){
    I2C0_MSA_R= (adress<<1)+0;
}

int main()
{
    // topraklar ortak
    init_i2c();
//    8. Specify the slave address of the master and that the next operation is a Transmit by writing the
//    I2CMSA register with a value of 0x0000.0076. This sets the slave address to 0x3B
	I2C0_MSA_R= (0x55<<1)+0; //kölenin adresi=0x55+write yapmak istiyorum; //1010101

//	9. Place data (byte) to be transmitted in the data register by writing the I2CMDR register with the
//	desired data.
	I2C0_MDR_R='w';

//	10. Initiate a single byte transmit of the data from Master to Slave by writing the I2CMCS register
//	with a value of 0x0000.0007 (STOP, START, RUN)
	I2C0_MCS_R=0x07; // haberleþme baþladý

//	11. Wait until the transmission completes by polling the I2CMCS register's BUSBSY bit until it has
//	been cleared
	while(I2C0_MCS_R & 0x01); // busy bekler

//	12. Check the ERROR bit in the I2CMCS register to confirm the transmit was acknowledged.
	if (!(I2C0_MCS_R & 0x02))
	{
	    int x=7;
	}

	// receive
	I2C0_MSA_R= (0x55<<1)+1; // arduino i2c slave - adama cevap vermem lazým
	I2C0_MCS_R=0x07; // haberleþme baþladý
    while(I2C0_MCS_R & 0x01); // busy bekler

    if (!(I2C0_MCS_R & 0x02))
    {
        int x=7;
    }

    uint8_t geleveri=I2C0_MDR_R;
	return 0;
}

void init_i2c()
{
    // i2c0 aktif
    SYSCTL_RCGCI2C_R|=0x01;
    // portb aktif
    SYSCTL_RCGCGPIO_R|=0x02;
    GPIO_PORTB_DEN_R |=0x0c;  // pb2 ve pb3 aktif 0000 1100
    //alternatif fonksiyon
    GPIO_PORTB_AFSEL_R |=0x0c;
    // open drain pull up
    GPIO_PORTB_ODR_R|=0x08;  // sda için open drain yapýldý
    GPIO_PORTB_PCTL_R|=0x03;
    I2C0_MCR_R|=0x0010; // master
    I2C0_MTPR_R=7; // 100 kbps
}
