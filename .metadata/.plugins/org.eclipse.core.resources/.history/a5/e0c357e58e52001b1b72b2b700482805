#include "stdint.h"
#include"inc/tm4c123gh6pm.h"

int main(void)
{
//    1. Enable the PWM clock by writing a value of 0x0010.0000 to the RCGC0 register in the System
//    Control module (see page 456).
    SYSCTL_RCGC0_R|=SYSCTL_RCGC0_PWM0; //0x00100000

//    2. Enable the clock to the appropriate GPIO module via the RCGC2 register in the System Control
//    module (see page 464) pb6 ve pb7 idi

    SYSCTL_RCGC2_R|=SYSCTL_RCGC2_GPIOB; //0x02

//    3. In the GPIO module, enable the appropriate pins for their alternate function using the
//    GPIOAFSEL register. To determine which GPIOs to configure, see Table 23-4 on page 1344

    GPIO_PORTB_AFSEL_R|= 0xC0; // pb6 ve pb7 alternatif fonk actýk
    GPIO_PORTB_DEN_R|= 0xC0;
    // direction outpurr
    //GPIO_PORTB_DIR_R|=0xc0;
    // analog fonk kapatýrsan iyi olur
    //GPIO_PORTB_AMSEL_R &=0x00;

//    4. Configure the PMCn fields in the GPIOPCTL register to assign the PWM signals to the appropriate
//    pins (see page 688 and Table 23-5 on page 1351).
    GPIO_PORTB_PCTL_R|=0x44000000;
    //GPIO_PORTB_PCTL_R|=GPIO_PCTL_PB6_M0PWM0|GPIO_PCTL_PB7_M0PWM1 ;

//    5. Configure the Run-Mode Clock Configuration (RCC) register in the System Control module
//    to use the PWM divide (USEPWMDIV) and set the divider (PWMDIV) to divide by 2 (000).

      SYSCTL_RCC_R|=00100000; //SYSCTL_RCC_USEPWMDIV //USEPWMDIV

      SYSCTL_RCC_R & = ~0X000E0000; // e 17-18-19 bit bölgesi 0 landý
      // divider 2
      // 8 mhz düþtü


	return 0;
}
